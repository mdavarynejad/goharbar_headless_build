{"version":3,"file":"component---src-templates-categories-archive-jsx-d49443f7f41760d37ae7.js","mappings":"yKAEMA,EAAUC,EAAAA,QAAAA,QAAAA,WAAc,4BAAdA,CAAc,2LAS1B,YAAiB,SAAdC,iBAEHC,EAAAA,EAAAA,KAAG,yFAQF,IAGCC,EAAUH,EAAAA,QAAAA,IAAAA,WAAU,4BAAVA,CAAU,2IAYpBI,EAAUJ,EAAAA,QAAAA,GAAAA,WAAS,4BAATA,CAAS,4JASnBK,EAAQL,EAAAA,QAAAA,GAAAA,WAAS,4BAATA,CAAS,wJAUjBM,EAAWN,EAAAA,QAAAA,EAAAA,WAAQ,4BAARA,CAAQ,2F,WCrDZO,EAAO,SAAH,OACfC,EAAO,EAAPA,QACAC,EAAK,EAALA,MACAC,EAAQ,EAARA,SACAC,EAAM,EAANA,OACAC,EAAe,EAAfA,gBACAX,EAAc,EAAdA,eAAc,OAEd,UAACF,EAAO,CAACE,eAAgBA,EAAe,WACtC,UAACE,EAAO,WACLK,IAAW,SAACJ,EAAO,UAAEI,KACtB,SAACH,EAAK,UAAEI,KACR,SAACH,EAAQ,UAAEI,IACVC,KAEFC,IACO,C,qHCRCC,EAAe,SAAH,GAOlB,IANLC,EAAQ,EAARA,SACAC,EAAO,EAAPA,QACAC,EAAa,EAAbA,cACAP,EAAK,EAALA,MACAQ,EAAW,EAAXA,YACAC,EAAM,EAANA,OAEMC,GAASC,EAAAA,EAAAA,IAAoBL,EAASC,GAE5C,OACE,8BACE,UAAC,KAAQ,CAACF,SAAUA,EAAS,WAC3B,SAAC,KAAgB,WACf,SAAC,KAAO,CAACO,UAAU,QAAQC,MAAOH,EAAQI,IAAKL,GAAU,QAE3D,UAAC,KAAc,YACb,SAAC,KAAS,CAACM,iBAAe,WAAEf,KAC5B,SAAC,KAAO,UAAEQ,WAKpB,E,WCOA,EAjCkC,SAAH,aAC7BQ,KAAI,IACFC,yBACM,EADkB,EACtBC,KAAI,GAAKC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAClCC,EAAG,EAAHA,IAEoBC,EAAa,EAAnCC,mBAAsBD,cAExBE,EAAW,EAAXA,YAAW,OAEX,UAACC,EAAA,EAAW,CACVC,SAAUF,EACVG,SAAUN,aAAG,EAAHA,EAAKM,SACfC,eAAgBP,aAAG,EAAHA,EAAKO,eACrBC,SAAUR,SAAa,QAAV,EAAHA,EAAKQ,gBAAQ,WAAV,EAAH,EAAeC,YAAY,WAErC,SAACjC,EAAA,EAAI,CAACC,QAASsB,EAASrB,MAAOmB,EAAWlB,SAAUmB,KACpD,SAAC,KAAoB,UAClBG,EAAcS,KAAI,gBAAGC,EAAE,EAAFA,GAAIjC,EAAK,EAALA,MAAOkC,EAAgB,EAAhBA,iBAAkBC,EAAU,EAAVA,WAAU,OAC3D,SAAC/B,EAAY,CAEXC,SAAU4B,EACVjC,MAAOA,EACPQ,YAAa0B,EACb5B,QAAS6B,EAAWC,gBACpB7B,cAAe4B,EAAWE,aAC1B5B,OAAQT,GANHiC,EAOL,QAGM,C","sources":["webpack://goharbar_website/./src/components/Layout/Hero/styles.js","webpack://goharbar_website/./src/components/Layout/Hero/index.jsx","webpack://goharbar_website/./src/components/Layout/Blog/Cards/CategoryCard.jsx","webpack://goharbar_website/./src/templates/CategoriesArchive.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nconst Wrapper = styled.section`\n  display: grid;\n  background-color: #f1defa;\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\n  margin: auto;\n  row-gap: var(--gapXL);\n  max-width: var(--globalContainer);\n  align-items: center;\n\n  ${({ isFullViewport }) =>\n    isFullViewport &&\n    css`\n      justify-content: center;\n      height: 100vh;\n\n      & > div {\n        justify-items: center;\n        text-align: center;\n      }\n    `};\n`;\n\nconst TextBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: var(--gapRegular);\n  width: 600px;\n  height: max-content;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Caption = styled.h2`\n  color: var(--primaryColor);\n  font-size: var(--baseXL);\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  line-height: var(--headingsLineHeight);\n  font-weight: 400;\n`;\n\nconst Title = styled.h1`\n  font-size: var(--headingXXL);\n  color: var(--headingsColor);\n  line-height: var(--headingsLineHeight);\n\n  @media (max-width: 768px) {\n    font-size: var(--headingXL);\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-size: var(--baseXL);\n  color: var(--baseTextColor);\n  line-height: var(--bodyLineHeight);\n`;\n\nexport { Wrapper, TextBox, Caption, Title, Subtitle };\n","import { Wrapper, TextBox, Caption, Title, Subtitle } from './styles';\n\nexport const Hero = ({\n  caption,\n  title,\n  subtitle,\n  button,\n  sectionChildren,\n  isFullViewport,\n}) => (\n  <Wrapper isFullViewport={isFullViewport}>\n    <TextBox>\n      {caption && <Caption>{caption}</Caption>}\n      <Title>{title}</Title>\n      <Subtitle>{subtitle}</Subtitle>\n      {button}\n    </TextBox>\n    {sectionChildren}\n  </Wrapper>\n);\n","import {\n  CardImg,\n  CardLink,\n  ContentWrapper,\n  Excerpt,\n  PostTitle,\n  artDirectedCardImgs,\n  CardImgContainer,\n} from './styles';\n\nexport const CategoryCard = ({\n  recordId,\n  cardImg,\n  cardImgMobile,\n  title,\n  description,\n  altImg,\n}) => {\n  const images = artDirectedCardImgs(cardImg, cardImgMobile);\n\n  return (\n    <article>\n      <CardLink recordId={recordId}>\n        <CardImgContainer>\n          <CardImg objectFit=\"cover\" image={images} alt={altImg || ''} />\n        </CardImgContainer>\n        <ContentWrapper>\n          <PostTitle isCategoryTitle>{title}</PostTitle>\n          <Excerpt>{description}</Excerpt>\n        </ContentWrapper>\n      </CardLink>\n    </article>\n  );\n};\n","import { graphql } from 'gatsby';\n\nimport { Hero } from '../components/Layout/Hero';\nimport { PageWrapper } from '../components/Layout/PageWrapper';\nimport { CategoryCard } from '../components/Layout/Blog/Cards/CategoryCard';\nimport { SectionGridThreeCols } from '../components/Layout/sharedStyles/sectionStyles';\n\nconst CategoriesArchiveTemplate = ({\n  data: {\n    datoCmsCategoriesArchive: {\n      hero: [{ heroTitle, heroSubtitle, heroAlt }],\n      seo,\n    },\n    allDatoCmsCategory: { categoryNodes },\n  },\n  pageContext,\n}) => (\n  <PageWrapper\n    pageData={pageContext}\n    seoTitle={seo?.seoTitle}\n    seoDescription={seo?.seoDescription}\n    seoImage={seo?.seoImage?.seoImageUrl}\n  >\n    <Hero caption={heroAlt} title={heroTitle} subtitle={heroSubtitle} />\n    <SectionGridThreeCols>\n      {categoryNodes.map(({ id, title, shortDescription, coverImage }) => (\n        <CategoryCard\n          key={id}\n          recordId={id}\n          title={title}\n          description={shortDescription}\n          cardImg={coverImage.gatsbyImageData}\n          cardImgMobile={coverImage.squaredImage}\n          altImg={title}\n        />\n      ))}\n    </SectionGridThreeCols>\n  </PageWrapper>\n);\n\nexport default CategoriesArchiveTemplate;\n\nexport const query = graphql`\n  query CategoriesArchiveQuery($locale: String!) {\n    datoCmsCategoriesArchive(locale: { eq: $locale }) {\n      locale\n      seo {\n        seoTitle: title\n        seoDescription: description\n        seoImage: image {\n          seoImageUrl: url\n        }\n      }\n      hero {\n        heroTitle\n        heroSubtitle\n        heroAlt\n      }\n    }\n    allDatoCmsCategory(\n      filter: { locale: { eq: $locale }, noTranslate: { ne: true } }\n    ) {\n      categoryNodes: nodes {\n        locale\n        id: originalId\n        title\n        shortDescription\n        coverImage {\n          gatsbyImageData(\n            width: 300\n            height: 120\n            placeholder: NONE\n            forceBlurhash: false\n          )\n          squaredImage: gatsbyImageData(\n            width: 100\n            height: 100\n            imgixParams: { ar: \"1\", fit: \"crop\" }\n          )\n        }\n      }\n    }\n  }\n`;\n"],"names":["Wrapper","styled","isFullViewport","css","TextBox","Caption","Title","Subtitle","Hero","caption","title","subtitle","button","sectionChildren","CategoryCard","recordId","cardImg","cardImgMobile","description","altImg","images","artDirectedCardImgs","objectFit","image","alt","isCategoryTitle","data","datoCmsCategoriesArchive","hero","heroTitle","heroSubtitle","heroAlt","seo","categoryNodes","allDatoCmsCategory","pageContext","PageWrapper","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","map","id","shortDescription","coverImage","gatsbyImageData","squaredImage"],"sourceRoot":""}