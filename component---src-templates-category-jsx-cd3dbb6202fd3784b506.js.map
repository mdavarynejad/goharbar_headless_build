{"version":3,"file":"component---src-templates-category-jsx-cd3dbb6202fd3784b506.js","mappings":"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","sources":["webpack://goharbar_website/./src/components/Layout/Blog/Cards/ArticleCard.jsx","webpack://goharbar_website/./src/components/Layout/Blog/CategoriesMenu/styles.js","webpack://goharbar_website/./src/components/Layout/Blog/CategoriesMenu/index.jsx","webpack://goharbar_website/./src/components/Layout/Hero/styles.js","webpack://goharbar_website/./src/components/Layout/Hero/index.jsx","webpack://goharbar_website/./src/functions/formatDateTime.js","webpack://goharbar_website/./src/hooks/useFormattedDate.js","webpack://goharbar_website/./src/templates/Category.jsx"],"sourcesContent":["import { useFormattedDate } from '../../../../hooks/useFormattedDate';\n\nimport {\n  CardLink,\n  CategoryBox,\n  ContentWrapper,\n  PostTitle,\n  Date,\n  Excerpt,\n  AuthorCtaContainer,\n  AuthorContainer,\n  AuthorImg,\n  artDirectedCardImgs,\n  CardImgContainer,\n  CardImg,\n} from './styles';\n\nexport const ArticleCard = ({\n  recordId,\n  date,\n  title,\n  excerpt,\n  authorImg,\n  authorName,\n  category,\n  cardImg,\n  cardImgMobile,\n  altImg,\n}) => {\n  const images = artDirectedCardImgs(cardImg, cardImgMobile);\n\n  const { formattedDate } = useFormattedDate(date);\n\n  return (\n    <article>\n      <CardLink recordId={recordId}>\n        <CardImgContainer>\n          <CardImg objectFit=\"cover\" image={images} alt={altImg || ''} />\n        </CardImgContainer>\n        <ContentWrapper>\n          {category && <CategoryBox>{category.title}</CategoryBox>}\n          <Date>{formattedDate}</Date>\n          <PostTitle>{title}</PostTitle>\n          <Excerpt>{excerpt}</Excerpt>\n          <AuthorCtaContainer>\n            <AuthorContainer>\n              <AuthorImg\n                objectFit=\"cover\"\n                image={authorImg || ''}\n                alt={authorName || ''}\n              />\n              <Date as=\"address\">{authorName}</Date>\n            </AuthorContainer>\n          </AuthorCtaContainer>\n        </ContentWrapper>\n      </CardLink>\n    </article>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nimport { Navigator } from '../../../Navigator';\n\nconst divider = 'var(--borderSmall) solid var(--dividerColor);';\n\nconst Wrapper = styled.div`\n  max-width: var(--globalContainer);\n  padding: 0 var(--globalPaddingLr) var(--borderRegular) var(--globalPaddingLr);\n  margin: auto;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  --scrollBarHeight: 6px;\n  position: relative;\n  border-top: ${divider};\n  border-bottom: ${divider};\n\n  &::after {\n    position: absolute;\n    content: '';\n    width: var(--gapXL);\n    z-index: 2;\n    display: block;\n    height: calc(100% - calc(var(--scrollBarHeight) * 2));\n    top: 0;\n\n    ${({ isRtl }) =>\n      isRtl\n        ? css`\n            left: 0;\n            background: linear-gradient(\n              to left,\n              var(--backgroundTransparentColor) 25%,\n              var(--backgroundColor) 75%\n            );\n          `\n        : css`\n            right: 0;\n            background: linear-gradient(\n              to right,\n              var(--backgroundTransparentColor) 25%,\n              var(--backgroundColor) 75%\n            );\n          `}\n  }\n`;\n\nconst Nav = styled.nav`\n  width: var(--globalContainer);\n  padding: var(--gapRegular) 0\n    calc(var(--gapRegular) - calc(var(--scrollBarHeight) / 2)) 0;\n  overflow: auto;\n  scrollbar-width: thin;\n  scrollbar-color: var(--dividerColor) var(--transparent);\n  width: 100%;\n  max-width: var(--globalContainer);\n\n  &::-webkit-scrollbar {\n    height: var(--scrollBarHeight);\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--backgroundColorAlt);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--dividerColor);\n    border-radius: var(--scrollBarHeight);\n    border: none;\n  }\n`;\n\nconst NavList = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  width: min-content;\n  column-gap: var(--gapXL);\n\n  & li:last-of-type > a {\n    z-index: 3;\n  }\n`;\n\nconst CategoryLink = styled(Navigator)`\n  color: var(--headingsColor);\n  font-weight: 600;\n  white-space: nowrap;\n  position: relative;\n\n  @media (hover: hover) {\n    &:hover {\n      color: var(--primaryColor);\n    }\n  }\n`;\n\nexport { Wrapper, Container, Nav, NavList, CategoryLink };\n","import { graphql, useStaticQuery } from 'gatsby';\n\nimport { useTextDirection } from '../../../../hooks/useTextDirection';\nimport { usePageLocale } from '../../../../hooks/usePageLocale';\n\nimport { Wrapper, Container, Nav, NavList, CategoryLink } from './styles';\n\nexport const CategoriesMenu = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDatoCmsCategory(filter: { noTranslate: { ne: true } }) {\n        categoryNodes: nodes {\n          id: originalId\n          locale\n          title\n        }\n      }\n    }\n  `);\n\n  const {\n    allDatoCmsCategory: { categoryNodes },\n  } = data;\n\n  const { pageLocale } = usePageLocale();\n  const { isRtl } = useTextDirection();\n\n  return (\n    <Wrapper>\n      <Container isRtl={isRtl}>\n        <Nav>\n          <NavList>\n            {categoryNodes\n              .filter(({ locale }) => locale === pageLocale)\n              .map(({ id, title }) => (\n                <li key={title}>\n                  <CategoryLink recordId={id} activeClassName=\"activeClassLink\">\n                    {title}\n                  </CategoryLink>\n                </li>\n              ))}\n          </NavList>\n        </Nav>\n      </Container>\n    </Wrapper>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nconst Wrapper = styled.section`\n  display: grid;\n  background-color: #f1defa;\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\n  margin: auto;\n  row-gap: var(--gapXL);\n  max-width: var(--globalContainer);\n  align-items: center;\n\n  ${({ isFullViewport }) =>\n    isFullViewport &&\n    css`\n      justify-content: center;\n      height: 100vh;\n\n      & > div {\n        justify-items: center;\n        text-align: center;\n      }\n    `};\n`;\n\nconst TextBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: var(--gapRegular);\n  width: 600px;\n  height: max-content;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Caption = styled.h2`\n  color: var(--primaryColor);\n  font-size: var(--baseXL);\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  line-height: var(--headingsLineHeight);\n  font-weight: 400;\n`;\n\nconst Title = styled.h1`\n  font-size: var(--headingXXL);\n  color: var(--headingsColor);\n  line-height: var(--headingsLineHeight);\n\n  @media (max-width: 768px) {\n    font-size: var(--headingXL);\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-size: var(--baseXL);\n  color: var(--baseTextColor);\n  line-height: var(--bodyLineHeight);\n`;\n\nexport { Wrapper, TextBox, Caption, Title, Subtitle };\n","import { Wrapper, TextBox, Caption, Title, Subtitle } from './styles';\n\nexport const Hero = ({\n  caption,\n  title,\n  subtitle,\n  button,\n  sectionChildren,\n  isFullViewport,\n}) => (\n  <Wrapper isFullViewport={isFullViewport}>\n    <TextBox>\n      {caption && <Caption>{caption}</Caption>}\n      <Title>{title}</Title>\n      <Subtitle>{subtitle}</Subtitle>\n      {button}\n    </TextBox>\n    {sectionChildren}\n  </Wrapper>\n);\n","const timeOptions = {\n  hour: '2-digit',\n  minute: '2-digit',\n};\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n};\n\nconst formatDateTime = (dateString, contextLocale) =>\n  new Date(dateString).toLocaleString(contextLocale, {\n    ...dateOptions,\n    ...timeOptions,\n  });\n\nconst formatDate = (dateString, contextLocale) =>\n  new Date(dateString).toLocaleString(contextLocale, {\n    ...dateOptions,\n  });\n\nexport { formatDateTime, formatDate };\n","import { useContext } from 'react';\n\nimport { LocaleContext } from '../components/ContextProviders/LocaleProvider';\nimport { formatDate } from '../functions/formatDateTime';\n\nexport const useFormattedDate = (dateString) => {\n  const { pageLocale } = useContext(LocaleContext);\n\n  const formattedDate = formatDate(dateString, pageLocale);\n\n  return { formattedDate };\n};\n","import { graphql } from 'gatsby';\n\nimport { Hero } from '../components/Layout/Hero';\nimport { PageWrapper } from '../components/Layout/PageWrapper';\nimport { CategoriesMenu } from '../components/Layout/Blog/CategoriesMenu';\nimport { ArticleCard } from '../components/Layout/Blog/Cards/ArticleCard';\nimport { SectionGridThreeCols } from '../components/Layout/sharedStyles/sectionStyles';\n\nconst CategoryTemplate = ({\n  data: {\n    datoCmsCategory: {\n      hero: [{ heroTitle, heroSubtitle, heroAlt }],\n      seo,\n    },\n    allCategoryPosts: { postNodes },\n  },\n  pageContext,\n}) => (\n  <PageWrapper\n    pageData={pageContext}\n    seoTitle={seo?.seoTitle}\n    seoDescription={seo?.seoDescription}\n    seoImage={seo?.seoImage?.seoImageUrl}\n  >\n    <Hero caption={heroAlt} title={heroTitle} subtitle={heroSubtitle} />\n    <CategoriesMenu />\n    {postNodes.length > 0 && (\n      <SectionGridThreeCols>\n        {postNodes.map(\n          ({\n            id,\n            meta: { updatedAt },\n            title,\n            coverImage,\n            subtitle,\n            author: {\n              authorName,\n              picture: { authorImageData },\n            },\n            categoryLink,\n          }) => (\n            <ArticleCard\n              key={id}\n              recordId={id}\n              date={updatedAt}\n              category={categoryLink}\n              cardImg={coverImage.gatsbyImageData}\n              cardImgMobile={coverImage.squaredImage}\n              altImg={title}\n              title={title}\n              excerpt={subtitle}\n              authorImg={authorImageData}\n              authorAltImg={authorName}\n              authorName={authorName}\n            />\n          )\n        )}\n      </SectionGridThreeCols>\n    )}\n  </PageWrapper>\n);\n\nexport default CategoryTemplate;\n\nexport const query = graphql`\n  query CategoryQuery($id: String!, $locale: String!) {\n    datoCmsCategory(originalId: { eq: $id }, locale: { eq: $locale }) {\n      locale\n      seo {\n        seoTitle: title\n        seoDescription: description\n        seoImage: image {\n          seoImageUrl: url\n        }\n      }\n      hero {\n        heroTitle\n        heroSubtitle\n        heroAlt\n      }\n    }\n    allCategoryPosts: allDatoCmsBlogPost(\n      filter: {\n        locale: { eq: $locale }\n        noTranslate: { ne: true }\n        categoryLink: { originalId: { eq: $id } }\n      }\n      sort: { order: ASC, fields: meta___updatedAt }\n    ) {\n      postNodes: nodes {\n        locale\n        id: originalId\n        meta {\n          updatedAt\n        }\n        categoryLink {\n          originalId\n          title\n        }\n        coverImage {\n          gatsbyImageData(\n            width: 300\n            height: 120\n            placeholder: NONE\n            forceBlurhash: false\n          )\n          squaredImage: gatsbyImageData(\n            width: 100\n            height: 100\n            imgixParams: { ar: \"1\", fit: \"crop\" }\n          )\n        }\n        author {\n          authorName: name\n          picture {\n            authorImageData: gatsbyImageData(\n              height: 30\n              width: 30\n              placeholder: NONE\n            )\n          }\n        }\n        subtitle\n        title\n      }\n    }\n  }\n`;\n"],"names":["ArticleCard","recordId","date","title","excerpt","authorImg","authorName","category","cardImg","cardImgMobile","altImg","images","artDirectedCardImgs","formattedDate","useFormattedDate","objectFit","image","alt","as","divider","Wrapper","styled","Container","isRtl","css","Nav","NavList","CategoryLink","Navigator","CategoriesMenu","categoryNodes","useStaticQuery","allDatoCmsCategory","pageLocale","usePageLocale","useTextDirection","filter","locale","map","id","activeClassName","isFullViewport","TextBox","Caption","Title","Subtitle","Hero","caption","subtitle","button","sectionChildren","timeOptions","hour","minute","dateOptions","year","month","day","formatDateTime","dateString","contextLocale","Date","toLocaleString","formatDate","useContext","LocaleContext","data","datoCmsCategory","hero","heroTitle","heroSubtitle","heroAlt","seo","postNodes","allCategoryPosts","pageContext","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","length","updatedAt","meta","coverImage","author","authorImageData","picture","categoryLink","gatsbyImageData","squaredImage","authorAltImg"],"sourceRoot":""}