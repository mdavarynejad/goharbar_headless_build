{"version":3,"file":"component---src-pages-404-jsx-5ec14858ed4c83d84422.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/Hero/styles.js","webpack://headless-gatsby-multilang/./src/components/Layout/Hero/index.jsx","webpack://headless-gatsby-multilang/./src/components/Head/NotFoundPageHead.jsx","webpack://headless-gatsby-multilang/./src/pages/404.jsx","webpack://headless-gatsby-multilang/./src/functions/getPreferredLocale.js"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nconst Wrapper = styled.section`\n  display: grid;\n  background-color: #f1defa;\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\n  margin: auto;\n  row-gap: var(--gapXL);\n  max-width: var(--globalContainer);\n  align-items: center;\n\n  ${({ isFullViewport }) =>\n    isFullViewport &&\n    css`\n      justify-content: center;\n      height: 100vh;\n\n      & > div {\n        justify-items: center;\n        text-align: center;\n      }\n    `};\n`;\n\nconst TextBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: var(--gapRegular);\n  width: 600px;\n  height: max-content;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Caption = styled.h2`\n  color: var(--primaryColor);\n  font-size: var(--baseXL);\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  line-height: var(--headingsLineHeight);\n  font-weight: 400;\n`;\n\nconst Title = styled.h1`\n  font-size: var(--headingXXL);\n  color: var(--headingsColor);\n  line-height: var(--headingsLineHeight);\n\n  @media (max-width: 768px) {\n    font-size: var(--headingXL);\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-size: var(--baseXL);\n  color: var(--baseTextColor);\n  line-height: var(--bodyLineHeight);\n`;\n\nexport { Wrapper, TextBox, Caption, Title, Subtitle };\n","import { Wrapper, TextBox, Caption, Title, Subtitle } from './styles';\n\nexport const Hero = ({\n  caption,\n  title,\n  subtitle,\n  button,\n  sectionChildren,\n  isFullViewport,\n}) => (\n  <Wrapper isFullViewport={isFullViewport}>\n    <TextBox>\n      {caption && <Caption>{caption}</Caption>}\n      <Title>{title}</Title>\n      <Subtitle>{subtitle}</Subtitle>\n      {button}\n    </TextBox>\n    {sectionChildren}\n  </Wrapper>\n);\n","import { Helmet } from 'react-helmet';\n\nimport { isRtlLang } from '../../functions/localeUtils';\n\nexport const NotFoundPageHead = ({ locale, title }) => {\n  const isRtl = isRtlLang(locale);\n\n  return (\n    <Helmet>\n      <html lang={locale} dir={isRtl ? 'rtl' : 'ltr'} />\n      <link rel=\"icon\" href=\"/favicon-32.png\" type=\"image/png\" />\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n","import { graphql, Link, useStaticQuery } from 'gatsby';\n\nimport { Hero } from '../components/Layout/Hero';\nimport {\n  storeLocale,\n  getStoredLocale,\n  getSecondaryLangs,\n  findSecondaryLang,\n  isDefaultStored,\n  isSecondaryStored,\n} from '../functions/localeUtils';\nimport { getPreferredLocale } from '../functions/getPreferredLocale';\nimport { isSSR } from '../functions/isSSR';\nimport { NotFoundPageHead } from '../components/Head/NotFoundPageHead';\nimport { useLocales } from '../hooks/useLocales';\n\nconst NotFoundPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDatoCmsNotFoundPage {\n        nodes {\n          seo {\n            seoTitle: title\n          }\n          title\n          subtitle\n          backToHomeText\n          locale\n        }\n      }\n    }\n  `);\n\n  const { defaultLocale, locales } = useLocales();\n\n  const appLangCodes = [...locales];\n  const storedLocale = getStoredLocale();\n\n  if (!isSSR) {\n    const browserLangCodes = navigator.languages;\n    const {\n      allDatoCmsNotFoundPage: { nodes: propNodes },\n    } = data;\n\n    const [defaultLangPropsNode] = propNodes;\n\n    // Default locale data\n\n    const {\n      seo: { seoTitle },\n      title,\n      subtitle,\n      backToHomeText,\n    } = defaultLangPropsNode;\n\n    const defaultLangProps = {\n      headProps: {\n        title: seoTitle,\n        locale: defaultLocale,\n      },\n      heroProps: {\n        title,\n        subtitle,\n      },\n      linkProps: {\n        children: backToHomeText,\n        to: '/',\n      },\n    };\n\n    const getProps = () => {\n      // If default locale is already stored\n\n      const isDefaultLangStored = isDefaultStored(\n        appLangCodes,\n        storedLocale,\n        defaultLocale\n      );\n\n      if (isDefaultLangStored) return defaultLangProps;\n\n      // If secondary locale is already stored\n\n      const isSecondaryLangStored = isSecondaryStored(\n        appLangCodes,\n        storedLocale,\n        defaultLocale\n      );\n\n      if (isSecondaryLangStored) {\n        const storedLangProps = propNodes.find(\n          ({ locale }) => locale === storedLocale\n        );\n\n        return {\n          headProps: {\n            title: storedLangProps.seo.seoTitle,\n            locale: storedLocale,\n          },\n          heroProps: {\n            title: storedLangProps.title,\n            subtitle: storedLangProps.subtitle,\n          },\n          linkProps: {\n            children: storedLangProps.backToHomeText,\n            to: `/${storedLocale}`,\n          },\n        };\n      }\n\n      /**\n       * If no locale has been stored previously (e.g. first time visit), evaluate\n       * the preferred locale according to browser language list\n       */\n\n      const matchingLangCode = getPreferredLocale(\n        browserLangCodes,\n        appLangCodes\n      );\n\n      const defaultLocaleMatch = matchingLangCode === defaultLocale;\n\n      // If it equals to default language\n\n      if (!storedLocale && defaultLocaleMatch) {\n        storeLocale(defaultLocale);\n        return defaultLangProps;\n      }\n\n      // If it equals to secondary langauge\n\n      const secondaryLanguages = getSecondaryLangs(appLangCodes);\n      const secondaryLanguageMatch = findSecondaryLang(\n        secondaryLanguages,\n        matchingLangCode\n      );\n      if (!storedLocale && secondaryLanguageMatch) {\n        storeLocale(secondaryLanguageMatch);\n        const secondaryLangProps = propNodes.find(\n          ({ locale }) => locale === secondaryLanguageMatch\n        );\n        return {\n          headProps: {\n            title: secondaryLangProps.seo.seotitle,\n            locale: secondaryLanguageMatch,\n          },\n          heroProps: {\n            title: secondaryLangProps.title,\n            subtitle: secondaryLangProps.subtitle,\n          },\n          linkProps: {\n            children: secondaryLangProps.backToHomeText,\n            to: `/${secondaryLanguageMatch}`,\n          },\n        };\n      }\n\n      // Else return default locale data\n\n      return defaultLangProps;\n    };\n\n    const { headProps, heroProps, linkProps } = getProps();\n\n    return (\n      <>\n        <NotFoundPageHead {...headProps} />\n        <Hero\n          {...heroProps}\n          isFullViewport\n          button={\n            <Link\n              {...linkProps}\n              className=\"classicButton classicButtonOutline\"\n            />\n          }\n        />\n      </>\n    );\n  }\n  return null;\n};\n\nexport default NotFoundPage;\n","import { getLangCode } from './localeUtils';\n\nexport const getPreferredLocale = (browserLangCodes, appLangCodes) => {\n  if (browserLangCodes.length < 1 || appLangCodes.length < 1) {\n    throw new Error('Unable to retrieve language codes.');\n  }\n\n  let matchingLangCode;\n\n  browserLangCodes.some((browserLang) => {\n    const findIetfLangCode = appLangCodes.find(\n      (appLangCode) => appLangCode === browserLang\n    );\n    if (typeof findIetfLangCode === 'string') {\n      matchingLangCode = findIetfLangCode;\n    } else if (!findIetfLangCode) {\n      const findFullLangCode = appLangCodes.find(\n        (appLangCode) => getLangCode(appLangCode) === getLangCode(browserLang)\n      );\n      if (typeof findFullLangCode === 'string') {\n        matchingLangCode = findFullLangCode;\n      }\n    }\n\n    return typeof matchingLangCode === 'string';\n  });\n\n  return matchingLangCode;\n};\n"],"names":["Wrapper","styled","isFullViewport","css","TextBox","Caption","Title","Subtitle","Hero","caption","title","subtitle","button","sectionChildren","NotFoundPageHead","locale","isRtl","isRtlLang","Helmet","lang","dir","rel","href","type","data","useStaticQuery","useLocales","defaultLocale","locales","appLangCodes","storedLocale","getStoredLocale","isSSR","browserLangCodes","navigator","languages","propNodes","allDatoCmsNotFoundPage","nodes","defaultLangPropsNode","seoTitle","seo","backToHomeText","defaultLangProps","headProps","heroProps","linkProps","children","to","isDefaultStored","isSecondaryStored","storedLangProps","find","matchingLangCode","length","Error","some","browserLang","findIetfLangCode","appLangCode","findFullLangCode","getLangCode","getPreferredLocale","storeLocale","secondaryLanguages","getSecondaryLangs","secondaryLanguageMatch","findSecondaryLang","secondaryLangProps","seotitle","getProps","className"],"sourceRoot":""}